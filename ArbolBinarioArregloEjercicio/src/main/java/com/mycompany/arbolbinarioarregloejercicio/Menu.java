/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.arbolbinarioarregloejercicio;

import java.util.ArrayList;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author SCIS2-27
 */
public class Menu extends javax.swing.JFrame {
    ArbolBinarioArregloEjercicio obj = new ArbolBinarioArregloEjercicio();
    
    Random random = new Random();
    ArrayList<Integer> arreglo = new ArrayList();
    int generated;
    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        agregarValores = new javax.swing.JButton();
        generarArbol = new javax.swing.JButton();
        generarBurbuja = new javax.swing.JButton();
        imprimirArbol = new javax.swing.JButton();
        imprimirBurbuja = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        agregarValores.setText("Agregar Valores al arreglo");
        agregarValores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarValoresActionPerformed(evt);
            }
        });

        generarArbol.setText("Arbol Binario");
        generarArbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarArbolActionPerformed(evt);
            }
        });

        generarBurbuja.setText("Bubble Sort");
        generarBurbuja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarBurbujaActionPerformed(evt);
            }
        });

        imprimirArbol.setText("Imprimir Arbol");
        imprimirArbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirArbolActionPerformed(evt);
            }
        });

        imprimirBurbuja.setText("Imprimir Burbuja");
        imprimirBurbuja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirBurbujaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(agregarValores)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imprimirArbol)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                        .addComponent(imprimirBurbuja)
                        .addGap(57, 57, 57))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(generarArbol)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(generarBurbuja)
                        .addGap(75, 75, 75))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(agregarValores)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generarArbol)
                    .addComponent(generarBurbuja))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imprimirBurbuja)
                    .addComponent(imprimirArbol))
                .addGap(100, 100, 100))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarValoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarValoresActionPerformed
        int amount = Integer.parseInt(JOptionPane.showInputDialog(rootPane, "Ingrese la cantidad de valores a agregar al arreglo:"));
        
        for(int i = 0; i < amount; i++){
            generated = (random.nextInt(99)+1);
            if(generated%2==0){
                arreglo.add(generated);
            }else{
                i--;
            }
            
        }
    }//GEN-LAST:event_agregarValoresActionPerformed

    private void generarArbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarArbolActionPerformed
        long startTime = new Date().getTime();
        for (Integer integer : arreglo) {
            obj.insertar(integer);
        }
        long finishTime = new Date().getTime();
        JOptionPane.showMessageDialog(null, "Esta acción tardó "+ (finishTime-startTime) +" milisegundos en realizarse");
        
    }//GEN-LAST:event_generarArbolActionPerformed

    private void generarBurbujaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarBurbujaActionPerformed
        long startTime = new Date().getTime();
        
        for (int i = 0; i < arreglo.size() - 1; i++) {
            for (int j = 0; j < arreglo.size() - 1 - i; j++) {
                if (arreglo.get(j) > arreglo.get(j + 1)) {
                    
                    // Cambiar de posición
                    
                    int temp = arreglo.get(j);
                    arreglo.set(j, arreglo.get(j + 1));
                    arreglo.set(j + 1, temp);
                }
            }
        }
        
        long finishTime = new Date().getTime();
        JOptionPane.showMessageDialog(rootPane, "Esta acción tardó "+ (finishTime-startTime) +" milisegundos en realizarse");
        
    }//GEN-LAST:event_generarBurbujaActionPerformed

    private void imprimirArbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirArbolActionPerformed
        obj.recorrerInOrden();
    }//GEN-LAST:event_imprimirArbolActionPerformed

    private void imprimirBurbujaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirBurbujaActionPerformed
       JOptionPane.showMessageDialog(rootPane, arreglo.toString());
    }//GEN-LAST:event_imprimirBurbujaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarValores;
    private javax.swing.JButton generarArbol;
    private javax.swing.JButton generarBurbuja;
    private javax.swing.JButton imprimirArbol;
    private javax.swing.JButton imprimirBurbuja;
    // End of variables declaration//GEN-END:variables
}
